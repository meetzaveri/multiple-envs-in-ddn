---
kind: ScalarType
version: v1
definition:
  name: Int32
  graphql:
    typeName: qa_Int32

---
kind: BooleanExpressionType
version: v1
definition:
  name: Int32BoolExp
  operand:
    scalar:
      type: Int32
      comparisonOperators:
        - name: _eq
          argumentType: Int32!
        - name: _gt
          argumentType: Int32!
        - name: _gte
          argumentType: Int32!
        - name: _in
          argumentType: "[Int32!]!"
        - name: _lt
          argumentType: Int32!
        - name: _lte
          argumentType: Int32!
      dataConnectorOperatorMapping:
        - dataConnectorName: mysql_1
          dataConnectorScalarType: INT32
          operatorMapping: {}
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: qa_Int32BoolExp

---
kind: DataConnectorScalarRepresentation
version: v1
definition:
  dataConnectorName: mysql_1
  dataConnectorScalarType: INT32
  representation: Int32
  graphql:
    comparisonExpressionTypeName: qa_Int32ComparisonExp

---
kind: ScalarType
version: v1
definition:
  name: Timestamptz
  graphql:
    typeName: qa_Timestamptz

---
kind: BooleanExpressionType
version: v1
definition:
  name: TimestamptzBoolExp
  operand:
    scalar:
      type: Timestamptz
      comparisonOperators:
        - name: _eq
          argumentType: Timestamptz!
        - name: _gt
          argumentType: Timestamptz!
        - name: _gte
          argumentType: Timestamptz!
        - name: _in
          argumentType: "[Timestamptz!]!"
        - name: _lt
          argumentType: Timestamptz!
        - name: _lte
          argumentType: Timestamptz!
      dataConnectorOperatorMapping:
        - dataConnectorName: mysql_1
          dataConnectorScalarType: TIMESTAMPTZ
          operatorMapping: {}
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: qa_TimestamptzBoolExp

---
kind: DataConnectorScalarRepresentation
version: v1
definition:
  dataConnectorName: mysql_1
  dataConnectorScalarType: TIMESTAMPTZ
  representation: Timestamptz
  graphql:
    comparisonExpressionTypeName: qa_TimestamptzComparisonExp

---
kind: ScalarType
version: v1
definition:
  name: Float64
  graphql:
    typeName: qa_Float64

---
kind: BooleanExpressionType
version: v1
definition:
  name: Float64BoolExp
  operand:
    scalar:
      type: Float64
      comparisonOperators:
        - name: _eq
          argumentType: Float64!
        - name: _gt
          argumentType: Float64!
        - name: _gte
          argumentType: Float64!
        - name: _in
          argumentType: "[Float64!]!"
        - name: _lt
          argumentType: Float64!
        - name: _lte
          argumentType: Float64!
      dataConnectorOperatorMapping:
        - dataConnectorName: mysql_1
          dataConnectorScalarType: FLOAT64
          operatorMapping: {}
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: qa_Float64BoolExp

---
kind: DataConnectorScalarRepresentation
version: v1
definition:
  dataConnectorName: mysql_1
  dataConnectorScalarType: FLOAT64
  representation: Float64
  graphql:
    comparisonExpressionTypeName: qa_Float64ComparisonExp

---
kind: ScalarType
version: v1
definition:
  name: Int64
  graphql:
    typeName: qa_Int64

---
kind: BooleanExpressionType
version: v1
definition:
  name: Int64BoolExp
  operand:
    scalar:
      type: Int64
      comparisonOperators:
        - name: _eq
          argumentType: Int64!
        - name: _gt
          argumentType: Int64!
        - name: _gte
          argumentType: Int64!
        - name: _in
          argumentType: "[Int64!]!"
        - name: _lt
          argumentType: Int64!
        - name: _lte
          argumentType: Int64!
      dataConnectorOperatorMapping:
        - dataConnectorName: mysql_1
          dataConnectorScalarType: INT64
          operatorMapping: {}
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: qa_Int64BoolExp

---
kind: DataConnectorScalarRepresentation
version: v1
definition:
  dataConnectorName: mysql_1
  dataConnectorScalarType: INT64
  representation: Int64
  graphql:
    comparisonExpressionTypeName: qa_Int64ComparisonExp

---
kind: AggregateExpression
version: v1
definition:
  name: Int32AggExp
  operand:
    scalar:
      aggregatedType: Int32
      aggregationFunctions:
        - name: avg
          returnType: Float64!
        - name: count
          returnType: Int64!
        - name: max
          returnType: Int32!
        - name: min
          returnType: Int32!
        - name: sum
          returnType: Int64!
      dataConnectorAggregationFunctionMapping:
        - dataConnectorName: mysql_1
          dataConnectorScalarType: INT32
          functionMapping:
            avg:
              name: avg
            count:
              name: count
            max:
              name: max
            min:
              name: min
            sum:
              name: sum
  count:
    enable: true
  countDistinct:
    enable: true
  graphql:
    selectTypeName: qa_Int32AggExp

---
kind: AggregateExpression
version: v1
definition:
  name: TimestamptzAggExp
  operand:
    scalar:
      aggregatedType: Timestamptz
      aggregationFunctions: []
      dataConnectorAggregationFunctionMapping:
        - dataConnectorName: mysql_1
          dataConnectorScalarType: TIMESTAMPTZ
          functionMapping: {}
  count:
    enable: true
  countDistinct:
    enable: true
  graphql:
    selectTypeName: qa_TimestamptzAggExp

---
kind: OrderByExpression
version: v1
definition:
  name: Int32OrderByExp
  operand:
    scalar:
      orderedType: Int32
      enableOrderByDirections:
        enableAll: true
  graphql:
    expressionTypeName: qa_Int32OrderByExp

---
kind: OrderByExpression
version: v1
definition:
  name: TimestamptzOrderByExp
  operand:
    scalar:
      orderedType: Timestamptz
      enableOrderByDirections:
        enableAll: true
  graphql:
    expressionTypeName: qa_TimestamptzOrderByExp

---
kind: ScalarType
version: v1
definition:
  name: String_1
  graphql:
    typeName: qa_String1

---
kind: BooleanExpressionType
version: v1
definition:
  name: StringBoolExp
  operand:
    scalar:
      type: String_1
      comparisonOperators:
        - name: _contains
          argumentType: String_1!
        - name: _eq
          argumentType: String_1!
        - name: _in
          argumentType: "[String_1!]!"
        - name: _like
          argumentType: String_1!
      dataConnectorOperatorMapping:
        - dataConnectorName: mysql_1
          dataConnectorScalarType: STRING
          operatorMapping: {}
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: qa_StringBoolExp

---
kind: DataConnectorScalarRepresentation
version: v1
definition:
  dataConnectorName: mysql_1
  dataConnectorScalarType: STRING
  representation: String_1
  graphql:
    comparisonExpressionTypeName: qa_String1ComparisonExp

---
kind: ScalarType
version: v1
definition:
  name: Bigdecimal
  graphql:
    typeName: qa_Bigdecimal

---
kind: BooleanExpressionType
version: v1
definition:
  name: BigdecimalBoolExp
  operand:
    scalar:
      type: Bigdecimal
      comparisonOperators:
        - name: _eq
          argumentType: Bigdecimal!
        - name: _gt
          argumentType: Bigdecimal!
        - name: _gte
          argumentType: Bigdecimal!
        - name: _in
          argumentType: "[Bigdecimal!]!"
        - name: _lt
          argumentType: Bigdecimal!
        - name: _lte
          argumentType: Bigdecimal!
      dataConnectorOperatorMapping:
        - dataConnectorName: mysql_1
          dataConnectorScalarType: BIGDECIMAL
          operatorMapping: {}
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: qa_BigdecimalBoolExp

---
kind: DataConnectorScalarRepresentation
version: v1
definition:
  dataConnectorName: mysql_1
  dataConnectorScalarType: BIGDECIMAL
  representation: Bigdecimal
  graphql:
    comparisonExpressionTypeName: qa_BigdecimalComparisonExp

---
kind: AggregateExpression
version: v1
definition:
  name: StringAggExp
  operand:
    scalar:
      aggregatedType: String_1
      aggregationFunctions:
        - name: max
          returnType: String_1!
        - name: min
          returnType: String_1!
      dataConnectorAggregationFunctionMapping:
        - dataConnectorName: mysql_1
          dataConnectorScalarType: STRING
          functionMapping:
            max:
              name: max
            min:
              name: min
  count:
    enable: true
  countDistinct:
    enable: true
  graphql:
    selectTypeName: qa_StringAggExp

---
kind: AggregateExpression
version: v1
definition:
  name: BigdecimalAggExp
  operand:
    scalar:
      aggregatedType: Bigdecimal
      aggregationFunctions:
        - name: avg
          returnType: Float64!
        - name: count
          returnType: Int64!
        - name: max
          returnType: Bigdecimal!
        - name: min
          returnType: Bigdecimal!
        - name: sum
          returnType: Bigdecimal!
      dataConnectorAggregationFunctionMapping:
        - dataConnectorName: mysql_1
          dataConnectorScalarType: BIGDECIMAL
          functionMapping:
            avg:
              name: avg
            count:
              name: count
            max:
              name: max
            min:
              name: min
            sum:
              name: sum
  count:
    enable: true
  countDistinct:
    enable: true
  graphql:
    selectTypeName: qa_BigdecimalAggExp

---
kind: OrderByExpression
version: v1
definition:
  name: String1OrderByExp
  operand:
    scalar:
      orderedType: String_1
      enableOrderByDirections:
        enableAll: true
  graphql:
    expressionTypeName: qa_String1OrderByExp

---
kind: OrderByExpression
version: v1
definition:
  name: BigdecimalOrderByExp
  operand:
    scalar:
      orderedType: Bigdecimal
      enableOrderByDirections:
        enableAll: true
  graphql:
    expressionTypeName: qa_BigdecimalOrderByExp

